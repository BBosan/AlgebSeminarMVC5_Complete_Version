@model IEnumerable<PredVM>
@using Se.Models;

@using X.PagedList.Mvc; @*import this so we get our HTML Helper*@
@using X.PagedList.Mvc.Common;
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

@{
    ViewBag.Title = "Predbiljezbe List";

    var pagedListRenderOpcije = new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.Never,
        LinkToFirstPageFormat = "1",
        LinkToPreviousPageFormat = "❮", //ᐊ
        LinkToNextPageFormat = "❯", //ᐅ
        MaximumPageNumbersToDisplay = 6,
        //ContainerDivClasses = new string[] { "pagination" },
        //UlElementClasses = new string[] { "page-numbers" },
        //PageClasses = new string[] { "page-numbers" }
    };
}

<style>
    tr .center{
         text-align:center;
         vertical-align: middle;
    }
    th .center{
         text-align:center;
         vertical-align: middle;
    }
</style>


<h2>Predbiljezbe</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div class="container table-responsive">
    <table class="table table-striped table-condensed">
        @*<thead>*@
            <tr>
                <th class="center">
                    @Html.DisplayNameFor(model => model.Datum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Prezime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Adresa)
                </th>
                <th class="center">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BrojTelefona)
                </th>
                <th class="center">
                    @Html.DisplayNameFor(model => model.StatusDaNe)
                </th>
                <th class="center">
                    @Html.DisplayNameFor(model => model.idSeminar)
                </th>
                <th></th>
            </tr>
        @*</thead>*@

            @foreach (var item in Model)
            {
                @*<tbody>*@
                    <tr>
                        <td class="center">
                            @Html.DisplayFor(modelItem => item.DatumDisplayString)
                            @*@Html.DisplayFor(modelItem => item.DatumString)*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Prezime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Adresa)
                        </td>
                        <td class="center">
                            <a href="mailto:@(item.Email)?Subject=Hello%20@(item.Ime)" target="_top">@@</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BrojTelefona)
                        </td>
                        <td class="center">
                            @Html.DisplayFor(modelItem => item.StatusDaNeText)
                        </td>
                        <td class="center">
                            @Html.DisplayFor(modelItem => item.Seminar.Naziv)
                        </td>
                        <td class="center">
                            @Html.ActionLink("Edit", "Edit", new { id = item.idPredbiljezbe }) |
                            @Html.ActionLink("Details", "Details", new { id = item.idPredbiljezbe }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.idPredbiljezbe })
                        </td>
                    </tr>
                @*</tbody>*@
            }

</table>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }), pagedListRenderOpcije @*PagedListRenderOptions.ClassicPlusFirstAndLast*@)
</div>
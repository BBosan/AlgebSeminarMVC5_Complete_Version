@using Se.Other; <!--Enum-->

@model Se.Models.PredVM

@{
    #region trash
    //HtmlHelper.ClientValidationEnabled = false;
    //HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    //ViewContext.UnobtrusiveJavaScriptEnabled = false;
    //ViewContext.ClientValidationEnabled = false;

    //var checked_za_null = !Model.StatusDaNe.HasValue ? new { id = "Neobradjen", @checked = "checked" } : (object)new { id = "Neobradjen" };
    #endregion
    ViewBag.Title = "Edit";
    //var checked_za_null = !Model.StatusDaNe.HasValue ? new { @checked = "checked", @id = status.Neobradjen } : (object)new {@id = status.Neobradjen};
    //var checked_za_null2 = !Model.StatusDaNe.HasValue ? new { @checked = "checked" } : null;
}

@section styles{
<link href="~/Content/CSS/Admin/Shared/Radio.css" rel="stylesheet" />
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Predbiljezba</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idPredbiljezbe)

        <div class="form-group">
            @Html.LabelFor(model => model.DatumString, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumString, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumString, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Datum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Datum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Datum, "", new { @class = "text-danger" })
            </div>
        </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prezime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prezime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prezime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adresa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrojTelefona, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BrojTelefona, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrojTelefona, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idSeminar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idSeminar, Model.SeminariDropDown, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.idSeminar, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-push-2">
                @*<div id="radio_container">
                    @Html.RadioButtonFor(model => model.StatusDaNe, true, new { @id = status.Odobren})
                    <label for=@status.Odobren>
                    @status.Odobren
                    </label>
                    @Html.RadioButtonFor(model => model.StatusDaNe, false, new { @id = status.Odbijen})
                    <label for=@status.Odbijen>
                    @status.Odbijen
                    </label>
                    @Html.RadioButtonFor(model => model.StatusDaNe, string.Empty, checked_za_null)
                    <label for=@status.Neobradjen>
                    @status.Neobradjen
                    </label>
                </div>*@
                <!---->
                <div id="radio_container">
                    <label>
                        @Html.RadioButtonFor(model => model.StatusDaNe, true)
                        <span>@status.Odobren</span>
                    </label>
                    <label>
                        @Html.RadioButtonFor(model => model.StatusDaNe, false)
                        <span>@status.Odbijen</span>
                    </label>
                    <label>
                        @*@Html.RadioButtonFor(model => model.StatusDaNe, string.Empty, checked_za_null2)*@
                        @Html.RadioButton("StatusDaNe", string.Empty, (!Model.StatusDaNe.HasValue ? true : false))
                        <span>@status.Neobradjen</span>
                    </label>
                </div>                                    
                <!---->
                @Html.ValidationMessageFor(model => model.StatusDaNe, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


